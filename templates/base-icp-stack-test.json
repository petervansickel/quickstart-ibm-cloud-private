{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "IBM Cloud Private - AWS QuickStart",
  "Parameters": {
    "VPCName": {
      "Description": "The name of the deployed Virtual Private Cloud",
      "Type": "String",
      "Default": "IBMCloudPrivateVPC"
    },
    "ResourceOwner": {
      "Description": "Value for the owner tag for the deployed resource associated with the stack.",
      "Type": "String"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "ICPBucketName": {
      "Description": "The name of the S3 bucket where the ICP install archive is located.",
      "Type": "String"
    },
    "ICPArchivePath": {
      "Description": "The name of the ICP install archive.",
      "Type": "String"
    },
    "DockerInstallBinaryPath": {
      "Description": "The name of the Docker binary installer.",
      "Type": "String"
    },
    "ICPBootstrapBucketName": {
      "Description": "The name of the S3 bucket where the ICP boostrap script package is located.",
      "Type": "String"
    },
    "ICPBootstrapScriptPackagePath": {
      "Description": "The path to the ICP boostrap script package (zip) file in the ICP bootstrap S3 bucket.",
      "Type": "String"
    },
    "BootInstanceType": {
      "Description": "ICP boot node AWS instance type",
      "Type": "String",
      "Default": "t2.large",
      "AllowedValues": [
        "t2.micro",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m5.large"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "MasterInstanceType": {
      "Description": "ICP master node AWS instance type",
      "Type": "String",
      "Default": "t2.2xlarge",
      "AllowedValues": [
        "t2.micro",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m5.xlarge",
        "m5.2xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "WorkerInstanceType": {
      "Description": "ICP worker node AWS instance type",
      "Type": "String",
      "Default": "t2.xlarge",
      "AllowedValues": [
        "t2.micro",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "WorkerNodeCount": {
      "Description": "Number of worker nodes (desired capacity) to be deployed in the ICP cluster.",
      "Type": "String",
      "Default": "2"
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "AWSRegionAMIEC2": {
      "us-east-1": {
        "Ubuntu16": "ami-d15a75c7"
      },
      "us-east-2": {
        "Ubuntu16": "ami-6a003c0f"
      },
      "us-west-2": {
        "Ubuntu16": "ami-746aba14"
      },
      "us-west-1": {
        "Ubuntu16": "ami-a9a8e4c9"
      },
      "eu-west-1": {
        "Ubuntu16": "ami-844e0bf7"
      },
      "eu-central-1": {
        "Ubuntu16": "ami-a9a557c6"
      },
      "ap-northeast-1": {
        "Ubuntu16": "ami-d82efcb9"
      },
      "ap-southeast-1": {
        "Ubuntu16": "ami-d554f1b6"
      },
      "ap-southeast-2": {
        "Ubuntu16": "ami-0bc1f168"
      }
    }
  },
  "Resources": {
    "CfnUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Path": "/"
      }
    },
    "CfnKeys": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "CfnUser"
        }
      }
    },
    "ICPBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ICPBucketName"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "S3:GetObject",
                "S3:GetBucketLocation",
                "S3:ListBucket"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ICPBucketName"
                    },
                    "/*"
                  ]
                ]
              },
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CfnUser",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "ICPBootstrapBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ICPBootstrapBucketName"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "S3:GetObject",
                "S3:GetBucketLocation",
                "S3:ListBucket"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ICPBootstrapBucketName"
                    },
                    "/*"
                  ]
                ]
              },
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CfnUser",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "IBMCloudPrivateVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "VPCName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          }
        ]
      }
    },
    "WebbICPQuickStartSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "IBMCloudPrivateVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebbICPQuickStartSubnet"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          }
        ]
      }
    },
    "WebbICPQuickStartInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebbICPQuickStartInternetGateway"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          }
        ]
      }
    },
    "WebbICPQuickStartGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "IBMCloudPrivateVPC"
        },
        "InternetGatewayId": {
          "Ref": "WebbICPQuickStartInternetGateway"
        }
      }
    },
    "WebbICPQuickStartRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "IBMCloudPrivateVPC"
        }
      }
    },
    "WebbICPQuickStartPublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "WebbICPQuickStartSubnetRouteTableAssociation"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "WebbICPQuickStartRouteTable"
        },
        "GatewayId": {
          "Ref": "WebbICPQuickStartInternetGateway"
        }
      }
    },
    "WebbICPQuickStartSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "WebbICPQuickStartRouteTable"
        },
        "SubnetId": {
          "Ref": "WebbICPQuickStartSubnet"
        }
      }
    },
    "WebbICPQuickStartSSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "IBMCloudPrivateVPC"
        },
        "GroupName": "WebbICPQuickStartSSHSecurityGroup",
        "GroupDescription": "Security group enabling external SSH access.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebbICPQuickStartSSHSecurityGroup"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          }
        ]
      }
    },
    "ICPBootEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": [
        "ICPBucketPolicy", "ICPBootstrapBucketPolicy"
      ],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "ICPBootstrap": [
              "ICPInstallArchive",
              "DockerInstallBinary",
              "ICPBootstrapScripts"
            ]
          },
          "ICPInstallArchive": {
            "files": {
              "/tmp/icp/": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Ref": "ICPBucketName"
                      },
                      ".s3.amazonaws.com/",
                      {
                        "Ref": "ICPArchivePath"
                      }
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            }
          },
          "DockerInstallBinary": {
            "files": {
              "/root/docker/": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "http://",
                      {
                        "Ref": "ICPBucketName"
                      },
                      ".s3.amazonaws.com/",
                      {
                        "Ref": "DockerInstallBinaryPath"
                      }
                    ]
                  ]
                },
                "mode": "000555",
                "owner": "root",
                "group": "root"
              }
            }
          },
          "ICPBootstrapScripts": {
            "sources": {
              "/root/aws-icp-bootstrap": {
                "Fn::Join": [
                  "",
                  [
                    "http://",
                    {
                      "Ref": "ICPBootstrapBucketName"
                    },
                    ".s3.amazonaws.com/",
                    {
                      "Ref": "ICPBootstrapScriptPackagePath"
                    }
                  ]
                ]
              }
            }
          }
        },
        "AWS::CloudFormation::Authentication": {
          "S3AccessCreds": {
            "type": "S3",
            "accessKeyId": {
              "Ref": "CfnKeys"
            },
            "secretKey": {
              "Fn::GetAtt": [
                "CfnKeys",
                "SecretAccessKey"
              ]
            },
            "buckets": [
              {
                "Ref": "ICPBucketName"
              },
              {
                "Ref": "ICPBootstrapBucketName"
              }
            ]
          }
        }
      },
      "Properties": {
        "InstanceType": {
          "Ref": "BootInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionAMIEC2",
            {
              "Ref": "AWS::Region"
            },
            "Ubuntu16"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ICPBootEC2Instance"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          },
          {
            "Key": "ICPRole",
            "Value": "Boot"
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebbICPQuickStartSSHSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "WebbICPQuickStartSubnet"
            }
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "180"
            }
          },
          {
            "DeviceName": "/dev/sdf",
            "Ebs": {
              "VolumeSize": "100"
            }
          }
        ]
      }
    },
    "ICPMasterEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "MasterInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionAMIEC2",
            {
              "Ref": "AWS::Region"
            },
            "Ubuntu16"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ICPMasterEC2Instance"
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            }
          },
          {
            "Key": "ICPRole",
            "Value": "Master"
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebbICPQuickStartSSHSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "WebbICPQuickStartSubnet"
            }
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "260"
            }
          },
          {
            "DeviceName": "/dev/sdf",
            "Ebs": {
              "VolumeSize": "100"
            }
          }
        ]
      }
    },
    "ICPWorkerLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "DependsOn": [
        "WebbICPQuickStartGatewayAttachment"
      ],
      "Properties": {
        "LaunchConfigurationName": "ICPWorkerLaunchConfiguration",
        "InstanceType": {
          "Ref": "WorkerInstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionAMIEC2",
            {
              "Ref": "AWS::Region"
            },
            "Ubuntu16"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "140"
            }
          },
          {
            "DeviceName": "/dev/sdf",
            "Ebs": {
              "VolumeSize": "100"
            }
          }
        ],
        "AssociatePublicIpAddress": true
      }
    },
    "ICPWorkerAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "ICPWorkerAutoScalingGroup",
        "LaunchConfigurationName": {
          "Ref": "ICPWorkerLaunchConfiguration"
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "WebbICPQuickStartSubnet"
          }
        ],
        "DesiredCapacity": {
          "Ref": "WorkerNodeCount"
        },
        "MinSize": "1",
        "MaxSize": "10",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ICPWorkerAutoScalingGroup",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "ResourceOwner"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "ICPRole",
            "Value": "Worker",
            "PropagateAtLaunch": true
          }
        ]
      }
    }
  }
}
